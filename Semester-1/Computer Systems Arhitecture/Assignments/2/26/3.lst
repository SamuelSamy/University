     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                                            
    11                                                            
    12                                  ; (a + c) - (b + b + d)
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15 00000000 0004                        a  dw 1024
    16 00000002 0002                        b  dw 512
    17 00000004 0001                        _c dw 256
    18 00000006 8000                        d  dw 128
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          
    24 00000000 66A1[00000000]                  mov AX, [a]
    25 00000006 660305[04000000]                add AX, [_c]
    26                                          
    27 0000000D 668B1D[02000000]                mov BX, [b]
    28 00000014 66031D[02000000]                add BX, [b]
    29 0000001B 66031D[06000000]                add BX, [d]
    30                                          
    31 00000022 6629D8                          sub AX, BX
    32                                      
    33                                          ; exit(0)
    34 00000025 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    35 00000027 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
