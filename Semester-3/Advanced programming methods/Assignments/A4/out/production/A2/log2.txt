>>Program State:
executionStack = [(boolean a; (int v; (a = true; (( if (a) then (v = 2) else (v = 3) ); print(v)))))]
symbolTable = {}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [(int v; (a = true; (( if (a) then (v = 2) else (v = 3) ); print(v)))), boolean a]
symbolTable = {}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [(int v; (a = true; (( if (a) then (v = 2) else (v = 3) ); print(v)))), boolean a]
symbolTable = {}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [(int v; (a = true; (( if (a) then (v = 2) else (v = 3) ); print(v))))]
symbolTable = {a=false}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [(int v; (a = true; (( if (a) then (v = 2) else (v = 3) ); print(v))))]
symbolTable = {a=false}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [(a = true; (( if (a) then (v = 2) else (v = 3) ); print(v))), int v]
symbolTable = {a=false}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [(a = true; (( if (a) then (v = 2) else (v = 3) ); print(v))), int v]
symbolTable = {a=false}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [(a = true; (( if (a) then (v = 2) else (v = 3) ); print(v)))]
symbolTable = {a=false, v=0}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [(a = true; (( if (a) then (v = 2) else (v = 3) ); print(v)))]
symbolTable = {a=false, v=0}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [(( if (a) then (v = 2) else (v = 3) ); print(v)), a = true]
symbolTable = {a=false, v=0}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [(( if (a) then (v = 2) else (v = 3) ); print(v)), a = true]
symbolTable = {a=false, v=0}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [(( if (a) then (v = 2) else (v = 3) ); print(v))]
symbolTable = {a=true, v=0}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [(( if (a) then (v = 2) else (v = 3) ); print(v))]
symbolTable = {a=true, v=0}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [print(v), ( if (a) then (v = 2) else (v = 3) )]
symbolTable = {a=true, v=0}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [print(v), ( if (a) then (v = 2) else (v = 3) )]
symbolTable = {a=true, v=0}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [print(v), v = 2]
symbolTable = {a=true, v=0}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [print(v), v = 2]
symbolTable = {a=true, v=0}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [print(v)]
symbolTable = {a=true, v=2}
output = []
files = {}
heap = {}


>>Program State:
executionStack = [print(v)]
symbolTable = {a=true, v=2}
output = []
files = {}
heap = {}


>>Program State:
executionStack = []
symbolTable = {a=true, v=2}
output = [2]
files = {}
heap = {}


>>Program State:
executionStack = []
symbolTable = {a=true, v=2}
output = [2]
files = {}
heap = {}


